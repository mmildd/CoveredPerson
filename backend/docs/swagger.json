{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for SUT SE 2563",
        "title": "SUT SA Example API Playlist Vidoe",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/certificates": {
            "get": {
                "description": "list certificate entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List certificate entities",
                "operationId": "list-certificate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Certificate"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create certificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create certificate",
                "operationId": "create-certificate",
                "parameters": [
                    {
                        "description": "Certificate entity",
                        "name": "certificate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Certificate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Certificate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/certificates/{id}": {
            "get": {
                "description": "get certificate by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a certificate entity by ID",
                "operationId": "get-certificate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Certificate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Certificate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update certificate by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a certificate entity by ID",
                "operationId": "update-certificate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Certificate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Certificate entity",
                        "name": "certificate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Certificate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Certificate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get certificate by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a certificate entity by ID",
                "operationId": "delete-certificate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Certificate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/coveredpersons": {
            "get": {
                "description": "list coveredperson entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List coveredperson entities",
                "operationId": "list-coveredperson",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.CoveredPerson"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create coveredperson",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create coveredperson",
                "operationId": "create-coveredperson",
                "parameters": [
                    {
                        "description": "CoveredPerson entity",
                        "name": "coveredperson",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CoveredPerson"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.CoveredPerson"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/coveredpersons/{id}": {
            "get": {
                "description": "get coveredperson by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a coveredperson entity by ID",
                "operationId": "get-coveredperson",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CoveredPerson ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.CoveredPerson"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update coveredperson by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a coveredperson entity by ID",
                "operationId": "update-coveredperson",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CoveredPerson ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CoveredPerson entity",
                        "name": "coveredperson",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.CoveredPerson"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.CoveredPerson"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get coveredperson by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a coveredperson entity by ID",
                "operationId": "delete-coveredperson",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CoveredPerson ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/funds": {
            "get": {
                "description": "list fund entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List fund entities",
                "operationId": "list-fund",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Fund"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create fund",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create fund",
                "operationId": "create-fund",
                "parameters": [
                    {
                        "description": "Fund entity",
                        "name": "fund",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Fund"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Fund"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/funds/{id}": {
            "get": {
                "description": "get fund by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a fund entity by ID",
                "operationId": "get-fund",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Fund ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Fund"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update fund by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a fund entity by ID",
                "operationId": "update-fund",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "fund ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "fund entity",
                        "name": "fund",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Fund"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Fund"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get fund by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a fund entity by ID",
                "operationId": "delete-fund",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "fund ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/patients": {
            "get": {
                "description": "list patient entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List patient entities",
                "operationId": "list-patient",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Patient"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create patient",
                "operationId": "create-patient",
                "parameters": [
                    {
                        "description": "Patient entity",
                        "name": "patient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Patient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Patient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/patients/{id}": {
            "get": {
                "description": "get patient by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a patient entity by ID",
                "operationId": "get-patient",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Patient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update patient by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a patient entity by ID",
                "operationId": "update-patient",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Patient entity",
                        "name": "patient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Patient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Patient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get patient by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a patient entity by ID",
                "operationId": "delete-patient",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/schemeTypes": {
            "get": {
                "description": "list schemeType entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List schemeType entities",
                "operationId": "list-schemeType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.SchemeType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create schemeType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create schemeType",
                "operationId": "create-schemeType",
                "parameters": [
                    {
                        "description": "SchemeType entity",
                        "name": "schemeType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.SchemeType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.SchemeType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/schemeTypes/{id}": {
            "get": {
                "description": "get schemeType by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a schemeType entity by ID",
                "operationId": "get-schemeType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SchemeType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.SchemeType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update schemeType by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a schemeType entity by ID",
                "operationId": "update-schemeType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SchemeType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "SchemeType entity",
                        "name": "schemeType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.SchemeType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.SchemeType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get schemeType by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a schemeType entity by ID",
                "operationId": "delete-schemeType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SchemeType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.CoveredPerson": {
            "type": "object",
            "properties": {
                "certificate": {
                    "type": "integer"
                },
                "fund": {
                    "type": "integer"
                },
                "patient": {
                    "type": "integer"
                },
                "schemeType": {
                    "type": "integer"
                }
            }
        },
        "ent.Certificate": {
            "type": "object",
            "properties": {
                "Certificate_Name": {
                    "description": "CertificateName holds the value of the \"Certificate_Name\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CertificateQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CertificateEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.CertificateEdges": {
            "type": "object",
            "properties": {
                "certificateCoveredPerson": {
                    "description": "CertificateCoveredPerson holds the value of the Certificate_CoveredPerson edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.CoveredPerson"
                    }
                }
            }
        },
        "ent.CoveredPerson": {
            "type": "object",
            "properties": {
                "certificate_id": {
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CoveredPersonQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CoveredPersonEdges"
                },
                "fund_id": {
                    "type": "integer"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "patient_id": {
                    "type": "integer"
                },
                "schemeType_id": {
                    "type": "integer"
                }
            }
        },
        "ent.CoveredPersonEdges": {
            "type": "object",
            "properties": {
                "certificate": {
                    "description": "Certificate holds the value of the Certificate edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Certificate"
                },
                "fund": {
                    "description": "Fund holds the value of the Fund edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Fund"
                },
                "patient": {
                    "description": "Patient holds the value of the Patient edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Patient"
                },
                "schemeType": {
                    "description": "SchemeType holds the value of the SchemeType edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.SchemeType"
                }
            }
        },
        "ent.Fund": {
            "type": "object",
            "properties": {
                "Fund_Name": {
                    "description": "FundName holds the value of the \"Fund_Name\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the FundQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FundEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.FundEdges": {
            "type": "object",
            "properties": {
                "fundCoveredPerson": {
                    "description": "FundCoveredPerson holds the value of the Fund_CoveredPerson edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.CoveredPerson"
                    }
                }
            }
        },
        "ent.Patient": {
            "type": "object",
            "properties": {
                "Patient_Age": {
                    "description": "PatientAge holds the value of the \"Patient_Age\" field.",
                    "type": "string"
                },
                "Patient_Blood": {
                    "description": "PatientBlood holds the value of the \"Patient_Blood\" field.",
                    "type": "string"
                },
                "Patient_Gender": {
                    "description": "PatientGender holds the value of the \"Patient_Gender\" field.",
                    "type": "string"
                },
                "Patient_Height": {
                    "description": "PatientHeight holds the value of the \"Patient_Height\" field.",
                    "type": "string"
                },
                "Patient_Name": {
                    "description": "PatientName holds the value of the \"Patient_Name\" field.",
                    "type": "string"
                },
                "Patient_Prefix": {
                    "description": "PatientPrefix holds the value of the \"Patient_Prefix\" field.",
                    "type": "string"
                },
                "Patient_Weight": {
                    "description": "PatientWeight holds the value of the \"Patient_Weight\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PatientQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PatientEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PatientEdges": {
            "type": "object",
            "properties": {
                "patientCoveredPerson": {
                    "description": "PatientCoveredPerson holds the value of the Patient_CoveredPerson edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.CoveredPerson"
                    }
                }
            }
        },
        "ent.SchemeType": {
            "type": "object",
            "properties": {
                "SchemeType_Name": {
                    "description": "SchemeTypeName holds the value of the \"SchemeType_Name\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the SchemeTypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.SchemeTypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.SchemeTypeEdges": {
            "type": "object",
            "properties": {
                "schemeTypeCoveredPerson": {
                    "description": "SchemeTypeCoveredPerson holds the value of the SchemeType_CoveredPerson edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.CoveredPerson"
                    }
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}