basePath: /api/v1
definitions:
  controllers.CoveredPerson:
    properties:
      certificate:
        type: integer
      fund:
        type: integer
      patient:
        type: integer
      schemeType:
        type: integer
    type: object
  ent.Certificate:
    properties:
      Certificate_Name:
        description: CertificateName holds the value of the "Certificate_Name" field.
        type: string
      edges:
        $ref: '#/definitions/ent.CertificateEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CertificateQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.CertificateEdges:
    properties:
      certificateCoveredPerson:
        description: CertificateCoveredPerson holds the value of the Certificate_CoveredPerson
          edge.
        items:
          $ref: '#/definitions/ent.CoveredPerson'
        type: array
    type: object
  ent.CoveredPerson:
    properties:
      certificate_id:
        type: integer
      edges:
        $ref: '#/definitions/ent.CoveredPersonEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CoveredPersonQuery when eager-loading is set.
        type: object
      fund_id:
        type: integer
      id:
        description: ID of the ent.
        type: integer
      patient_id:
        type: integer
      schemeType_id:
        type: integer
    type: object
  ent.CoveredPersonEdges:
    properties:
      certificate:
        $ref: '#/definitions/ent.Certificate'
        description: Certificate holds the value of the Certificate edge.
        type: object
      fund:
        $ref: '#/definitions/ent.Fund'
        description: Fund holds the value of the Fund edge.
        type: object
      patient:
        $ref: '#/definitions/ent.Patient'
        description: Patient holds the value of the Patient edge.
        type: object
      schemeType:
        $ref: '#/definitions/ent.SchemeType'
        description: SchemeType holds the value of the SchemeType edge.
        type: object
    type: object
  ent.Fund:
    properties:
      Fund_Name:
        description: FundName holds the value of the "Fund_Name" field.
        type: string
      edges:
        $ref: '#/definitions/ent.FundEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the FundQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.FundEdges:
    properties:
      fundCoveredPerson:
        description: FundCoveredPerson holds the value of the Fund_CoveredPerson edge.
        items:
          $ref: '#/definitions/ent.CoveredPerson'
        type: array
    type: object
  ent.Patient:
    properties:
      Patient_Age:
        description: PatientAge holds the value of the "Patient_Age" field.
        type: string
      Patient_Blood:
        description: PatientBlood holds the value of the "Patient_Blood" field.
        type: string
      Patient_Gender:
        description: PatientGender holds the value of the "Patient_Gender" field.
        type: string
      Patient_Height:
        description: PatientHeight holds the value of the "Patient_Height" field.
        type: string
      Patient_Name:
        description: PatientName holds the value of the "Patient_Name" field.
        type: string
      Patient_Prefix:
        description: PatientPrefix holds the value of the "Patient_Prefix" field.
        type: string
      Patient_Weight:
        description: PatientWeight holds the value of the "Patient_Weight" field.
        type: string
      edges:
        $ref: '#/definitions/ent.PatientEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PatientQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.PatientEdges:
    properties:
      patientCoveredPerson:
        description: PatientCoveredPerson holds the value of the Patient_CoveredPerson
          edge.
        items:
          $ref: '#/definitions/ent.CoveredPerson'
        type: array
    type: object
  ent.SchemeType:
    properties:
      SchemeType_Name:
        description: SchemeTypeName holds the value of the "SchemeType_Name" field.
        type: string
      edges:
        $ref: '#/definitions/ent.SchemeTypeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the SchemeTypeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.SchemeTypeEdges:
    properties:
      schemeTypeCoveredPerson:
        description: SchemeTypeCoveredPerson holds the value of the SchemeType_CoveredPerson
          edge.
        items:
          $ref: '#/definitions/ent.CoveredPerson'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SA Example API Playlist Vidoe
  version: "1.0"
paths:
  /certificates:
    get:
      description: list certificate entities
      operationId: list-certificate
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Certificate'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List certificate entities
    post:
      consumes:
      - application/json
      description: Create certificate
      operationId: create-certificate
      parameters:
      - description: Certificate entity
        in: body
        name: certificate
        required: true
        schema:
          $ref: '#/definitions/ent.Certificate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Certificate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create certificate
  /certificates/{id}:
    delete:
      description: get certificate by ID
      operationId: delete-certificate
      parameters:
      - description: Certificate ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a certificate entity by ID
    get:
      description: get certificate by ID
      operationId: get-certificate
      parameters:
      - description: Certificate ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Certificate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a certificate entity by ID
    put:
      consumes:
      - application/json
      description: update certificate by ID
      operationId: update-certificate
      parameters:
      - description: Certificate ID
        in: path
        name: id
        required: true
        type: integer
      - description: Certificate entity
        in: body
        name: certificate
        required: true
        schema:
          $ref: '#/definitions/ent.Certificate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Certificate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a certificate entity by ID
  /coveredpersons:
    get:
      description: list coveredperson entities
      operationId: list-coveredperson
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.CoveredPerson'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List coveredperson entities
    post:
      consumes:
      - application/json
      description: Create coveredperson
      operationId: create-coveredperson
      parameters:
      - description: CoveredPerson entity
        in: body
        name: coveredperson
        required: true
        schema:
          $ref: '#/definitions/controllers.CoveredPerson'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.CoveredPerson'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create coveredperson
  /coveredpersons/{id}:
    delete:
      description: get coveredperson by ID
      operationId: delete-coveredperson
      parameters:
      - description: CoveredPerson ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a coveredperson entity by ID
    get:
      description: get coveredperson by ID
      operationId: get-coveredperson
      parameters:
      - description: CoveredPerson ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.CoveredPerson'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a coveredperson entity by ID
    put:
      consumes:
      - application/json
      description: update coveredperson by ID
      operationId: update-coveredperson
      parameters:
      - description: CoveredPerson ID
        in: path
        name: id
        required: true
        type: integer
      - description: CoveredPerson entity
        in: body
        name: coveredperson
        required: true
        schema:
          $ref: '#/definitions/ent.CoveredPerson'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.CoveredPerson'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a coveredperson entity by ID
  /funds:
    get:
      description: list fund entities
      operationId: list-fund
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Fund'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List fund entities
    post:
      consumes:
      - application/json
      description: Create fund
      operationId: create-fund
      parameters:
      - description: Fund entity
        in: body
        name: fund
        required: true
        schema:
          $ref: '#/definitions/ent.Fund'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Fund'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create fund
  /funds/{id}:
    delete:
      description: get fund by ID
      operationId: delete-fund
      parameters:
      - description: fund ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a fund entity by ID
    get:
      description: get fund by ID
      operationId: get-fund
      parameters:
      - description: Fund ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Fund'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a fund entity by ID
    put:
      consumes:
      - application/json
      description: update fund by ID
      operationId: update-fund
      parameters:
      - description: fund ID
        in: path
        name: id
        required: true
        type: integer
      - description: fund entity
        in: body
        name: fund
        required: true
        schema:
          $ref: '#/definitions/ent.Fund'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Fund'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a fund entity by ID
  /patients:
    get:
      description: list patient entities
      operationId: list-patient
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Patient'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List patient entities
    post:
      consumes:
      - application/json
      description: Create patient
      operationId: create-patient
      parameters:
      - description: Patient entity
        in: body
        name: patient
        required: true
        schema:
          $ref: '#/definitions/ent.Patient'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Patient'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create patient
  /patients/{id}:
    delete:
      description: get patient by ID
      operationId: delete-patient
      parameters:
      - description: Patient ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a patient entity by ID
    get:
      description: get patient by ID
      operationId: get-patient
      parameters:
      - description: Patient ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Patient'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a patient entity by ID
    put:
      consumes:
      - application/json
      description: update patient by ID
      operationId: update-patient
      parameters:
      - description: Patient ID
        in: path
        name: id
        required: true
        type: integer
      - description: Patient entity
        in: body
        name: patient
        required: true
        schema:
          $ref: '#/definitions/ent.Patient'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Patient'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a patient entity by ID
  /schemeTypes:
    get:
      description: list schemeType entities
      operationId: list-schemeType
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.SchemeType'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List schemeType entities
    post:
      consumes:
      - application/json
      description: Create schemeType
      operationId: create-schemeType
      parameters:
      - description: SchemeType entity
        in: body
        name: schemeType
        required: true
        schema:
          $ref: '#/definitions/ent.SchemeType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.SchemeType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create schemeType
  /schemeTypes/{id}:
    delete:
      description: get schemeType by ID
      operationId: delete-schemeType
      parameters:
      - description: SchemeType ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a schemeType entity by ID
    get:
      description: get schemeType by ID
      operationId: get-schemeType
      parameters:
      - description: SchemeType ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.SchemeType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a schemeType entity by ID
    put:
      consumes:
      - application/json
      description: update schemeType by ID
      operationId: update-schemeType
      parameters:
      - description: SchemeType ID
        in: path
        name: id
        required: true
        type: integer
      - description: SchemeType entity
        in: body
        name: schemeType
        required: true
        schema:
          $ref: '#/definitions/ent.SchemeType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.SchemeType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a schemeType entity by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    authorizationUrl: ""
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    authorizationUrl: ""
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
